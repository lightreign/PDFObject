import{_ as s,c as i,o as e,V as a}from"./chunks/framework.BaJ171t2.js";const g=JSON.parse('{"title":"PDFObject API","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md"}'),t={name:"api/index.md"},n=a(`<h1 id="pdfobject-api" tabindex="-1">PDFObject API <a class="header-anchor" href="#pdfobject-api" aria-label="Permalink to &quot;PDFObject API&quot;">​</a></h1><p>PDFObject provides two properties and one method.</p><h2 id="pdfobject-supportspdfs" tabindex="-1"><code>PDFObject.supportsPDFs</code> <a class="header-anchor" href="#pdfobject-supportspdfs" aria-label="Permalink to &quot;\`PDFObject.supportsPDFs\`&quot;">​</a></h2><p>Property. Returns true or false based on following logic:</p><ul><li>If the browser is on a mobile device, PDFObject will automatically assume PDFs are not supported and return <code>false</code>. (As of February 2024, no mobile browsers properly support inline PDFs.)</li><li>If <strong>not</strong> a mobile device, PDFObject will check <code>navigator.pdfViewerEnabled</code>.</li><li>If <code>navigator.pdfViewerEnabled</code> is found, but <em>disabled</em> (e.g. the user has intentionally disabled PDF support in the browser), PDFObject will respect this and return <code>false</code>.</li><li>If <code>navigator.pdfViewerEnabled</code> is found and set to <code>true</code>, PDFObject will return <code>true</code>.</li><li>If <code>navigator.pdfViewerEnabled</code> is not found, PDFObject will check what kind of browser is being used. If the browser is known to support inline PDFs natively (Chrome/Edge/Opera/etc, macOS Safari, Firefox), PDFObject will assume inline PDFs are supported and return <code>true</code>.</li><li>If Internet Explorer 11, PDFObject will query against ActiveX for known PDF plugins (Acrobat, FoxIt) and act accordingly.</li></ul><p>PDFObject <strong>does not</strong> perform detection for specific PDF rendering engines (PDFium, PDF.js, Adobe Reader, FoxIt, etc.). Note: For those who wish to target PDF.js, there is an option in <code>PDFObject.embed()</code> to force use of PDF.js. See <a href="#PDFJS_URL">PDJS_URL</a> for details.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PDFObject.supportsPDFs){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Yay, this browser supports inline PDFs.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Boo, inline PDFs are not supported by this browser&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="pdfobject-pdfobjectversion" tabindex="-1"><code>PDFObject.pdfobjectversion</code> <a class="header-anchor" href="#pdfobject-pdfobjectversion" aria-label="Permalink to &quot;\`PDFObject.pdfobjectversion\`&quot;">​</a></h2><p>Property. Returns the version of PDFObject.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PDFObject.pdfobjectversion); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//&quot;2.3.0&quot;</span></span></code></pre></div><h2 id="pdfobject-embed" tabindex="-1"><code>PDFObject.embed</code> <a class="header-anchor" href="#pdfobject-embed" aria-label="Permalink to &quot;\`PDFObject.embed\`&quot;">​</a></h2><p>Method. Returns the embedded <code>&lt;iframe&gt;</code>, or false if unable to embed. Expects the following arguments:</p><p><code>PDFObject.embed(url [string], target [mixed], options [object])</code></p><ul><li>url [string, required]. The URL of the PDF. Can be relative or absolute. Can also be a Base64 string (be sure to include MIME type as part of string).</li><li>target [mixed, optional]. The HTML element the PDF will be inserted into.</li><li>options [object, optional]. Enables you to fine-tune the embed for various scenarios.</li></ul><p>If target is omitted, PDFObject will default to <code>document.body</code>, filling the entire page with the embedded PDF.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//embeds a PDF and makes it fill the browser window</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="specifying-a-target" tabindex="-1">Specifying a target <a class="header-anchor" href="#specifying-a-target" aria-label="Permalink to &quot;Specifying a target&quot;">​</a></h3><p>The <code>target</code> parameter can accept a CSS selector, HTML node, or jQuery object.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//passes a CSS selector to specify the target</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//passes a vanilla HTML node for target</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mynode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;someID&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mynode);</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//passes a jQuery object (HTML node) for target</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#someID&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, $node);</span></span></code></pre></div><h2 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h2><p>PDFObject&#39;s <code>options</code> parameter provides a lot of flexibility.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//embeds a PDF into the element &quot;my-container&quot; with a few options specified</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My embedded PDF&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pdfOpenParams: { view: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Fit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, page: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options);</span></span></code></pre></div><br><h3 id="page" tabindex="-1">page <a class="header-anchor" href="#page" aria-label="Permalink to &quot;page&quot;">​</a></h3><p>[string or number]. Default: <code>null</code></p><p>Alias for PDF Open Parameters &quot;page&quot; option. Any number entered here will cause the PDF be opened to the specified page number, <strong>if the browser supports it</strong>. If left unspecified, the PDF will open on page 1.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { page: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><p><strong>Demo:</strong> <a href="/examples/specifying-page-number.html" target="_blank">Specifying the page number</a></p><br><h3 id="fallbacklink" tabindex="-1">fallbackLink <a class="header-anchor" href="#fallbacklink" aria-label="Permalink to &quot;fallbackLink&quot;">​</a></h3><p>[string] or [boolean]. Default: <code>&quot;&lt;p&gt;This browser does not support inline PDFs. Please download the PDF to view it: &lt;a href=&#39;[url]&#39;&gt;Download PDF&lt;/a&gt;&lt;/p&gt;&quot;</code></p><p>Any string entered here will be inserted into the target element when the browser doesn&#39;t support inline PDFs.</p><ul><li>If entering a string, HTML is supported.</li><li>Use the shortcode <code>[url]</code> to insert the URL of the PDF (the string passed in <code>embed(url)</code>).<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   fallbackLink: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;p&gt;This is a &lt;a href=&#39;[url]&#39;&gt;fallback link&lt;/a&gt;&lt;/p&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//If browser doesn&#39;t support inline PDFs, outputs:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//&lt;p&gt;This is a &lt;a href=&#39;myfile.pdf&#39;&gt;fallback link&lt;/a&gt;&lt;/p&gt;</span></span></code></pre></div></li><li>Entering <code>false</code> will disable the fallback text option and prevent PDFObject from inserting fallback text<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {fallbackLink: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//If browser doesn&#39;t support inline PDFs, PDFObject will output nothing</span></span></code></pre></div></li></ul><p><strong>Demo:</strong> <a href="/examples/specifying-custom-fallback-link.html" target="_blank">Specifying a custom fallback</a></p><p><strong>Demo:</strong> <a href="/examples/declining-a-fallback.html.html" target="_blank">Declining a fallback</a></p><br><h3 id="pdfopenparams" tabindex="-1">pdfOpenParams <a class="header-anchor" href="#pdfopenparams" aria-label="Permalink to &quot;pdfOpenParams&quot;">​</a></h3><p>[object]. Default: <code>null</code></p><p>Allows you to specify PDF Open Parameters.</p><p><strong>Warning:</strong> These are not well supported outside of Adobe Reader and FoxIt PDF Reader. See our Browser Support section for <a href="/guide/browser-support.html#pdf-open-parameters">a list of all available PDF Open Parameters, including browser support</a>.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {pdfOpenParams: { page: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//If supported, the PDF viewer will automatically scroll to page 10 on load</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>PDFObject provides a convenient alias for PDF Open Parameters&#39; <code>page</code> parameter:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//These two lines function identically</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { page: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {pdfOpenParams: { page: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }});</span></span></code></pre></div></div><p><strong>Demo:</strong> <a href="/examples/pdf-open-params.html" target="_blank">PDF Open Parameters Test Page</a></p><br><h3 id="title" tabindex="-1">title <a class="header-anchor" href="#title" aria-label="Permalink to &quot;title&quot;">​</a></h3><p>[string]. Default: <code>&quot;Embedded PDF&quot;</code></p><p>Any string entered here will be appended to the generated <code>&lt;iframe&gt;</code> element as the <code>title</code> attribute. If left unspecified, PDFObject will write &quot;Embedded PDF&quot;. This improves accessibility, ensuring the purpose of the <code>&lt;iframe&gt;</code> is clear to screen readers.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;PDF version of your banking statement&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//outputs &lt;iframe src=&quot;myfile.pdf&quot; title=&quot;PDF version of your banking statement&quot;&gt;</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>PDFObject does not have the ability to alter the title of the PDF itself, or how the PDF&#39;s title is displayed in the PDF reader.</p></div><p><strong>Demo:</strong> <a href="/examples/setting-title.html" target="_blank">Setting iframe title</a></p><br><h3 id="id" tabindex="-1">id <a class="header-anchor" href="#id" aria-label="Permalink to &quot;id&quot;">​</a></h3><p>[string]. Default: <code>null</code></p><p>Any string entered here will be appended to the generated <code>&lt;iframe&gt;</code> element as the ID. If left unspecified, no ID will be appended.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myID&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//outputs &lt;iframe src=&quot;myfile.pdf&quot; id=&quot;myID&quot;&gt;</span></span></code></pre></div><br><h3 id="customattribute" tabindex="-1">customAttribute <a class="header-anchor" href="#customattribute" aria-label="Permalink to &quot;customAttribute&quot;">​</a></h3><p>[object]. Default: <code>null</code></p><p>This option allows developers to specify a custom attribute on the <code>&lt;iframe&gt;</code> element. For example, you could specify the <code>loading</code> attribute on the iframe to be <code>&quot;lazy&quot;</code>. You could also set a <code>sandbox</code> value, if needed.</p><p>Values must be set as <code>key</code> and <code>value</code>, as shown in the following example:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    customAttribute: { key: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options);</span></span></code></pre></div><p><strong>Demo:</strong> <a href="/examples/custom-attribute.html" target="_blank">Specifying a custom attribute</a></p><p>Disallowed tokens are: <code>className</code>, <code>type</code>, <code>title</code>, <code>src</code>, <code>style</code>, <code>id</code>, <code>allow</code>, and <code>frameborder</code>. These are all reserved.</p><p>PDFObject will only allow a single custom attribute to be set. However, if you would like to set additional attributes, you can do so by modifying the returned <code>&lt;iframe&gt;</code>:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    customAttribute: { key: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iframe </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">iframe.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pie&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pumpkin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><br><h3 id="pdfjs-url" tabindex="-1">PDFJS_URL <a class="header-anchor" href="#pdfjs-url" aria-label="Permalink to &quot;PDFJS_URL&quot;">​</a></h3><p>[string]. Default: <code>null</code></p><p><em>PDFObject is not affiliated with Mozilla or PDF.js, and the PDF.js code is not included with PDFObject.</em></p><p>If you would like to use PDF.js with PDFObject, you will need to specify the URL of the <a href="https://github.com/mozilla/pdf.js/wiki/Setup-PDF.js-in-a-website" target="_blank" rel="noreferrer">PDF.js viewer HTML file</a>. PDFObject will automatically pass the PDF&#39;s URL to PDF.js.</p><p>If you provide the <code>PDFJS_URL</code>, but do <strong>not</strong> set <code>forcePDFJS</code> to true, PDF.js will only be used as a fallback for browsers that do not offer native support for inline PDFs.</p><p><strong>Demo:</strong> <a href="/examples/pdfjs.html" target="_blank">Using PDF.js as a fallback</a></p><br><h3 id="forcepdfjs" tabindex="-1">forcePDFJS <a class="header-anchor" href="#forcepdfjs" aria-label="Permalink to &quot;forcePDFJS&quot;">​</a></h3><p>[boolean]. Default: <code>false</code></p><p><em>PDFObject is not affiliated with Mozilla or PDF.js, and the PDF.js code is not included with PDFObject.</em></p><p>If set to true and the <code>PDFJS_URL</code> string is not null, PDFObject will attempt to use PDF.js to embed the PDF in the browser, regardless of the browser&#39;s default PDF viewer.</p><p><strong>Demo:</strong> <a href="/examples/pdfjs-forced.html" target="_blank">Forcing all embeds to be rendered by PDF.js</a></p><br><h3 id="height" tabindex="-1">height <a class="header-anchor" href="#height" aria-label="Permalink to &quot;height&quot;">​</a></h3><p>[string]. Default: <code>&quot;100%&quot;</code></p><p>Will insert the height as an inline style via the <code>style</code> attribute on the the generated <code>&lt;iframe&gt;</code>. If left unspecified, PDFObject will default to 100%. Is standard CSS, supports all units, including px, %, em, and rem.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { height: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;500px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>Avoid hard-coding <code>height</code> when possible. It&#39;s safer to specify dimensions using your site&#39;s CSS.</p></div><br><h3 id="width" tabindex="-1">width <a class="header-anchor" href="#width" aria-label="Permalink to &quot;width&quot;">​</a></h3><p>[string]. Default: <code>&quot;100%&quot;</code></p><p>Will insert the width as an inline style via the <code>style</code> attribute on the generated <code>&lt;iframe&gt;</code>. If left unspecified, PDFObject will default to 100%. Is standard CSS, supports all units, including px, %, em, and rem.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PDFObject.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">embed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myfile.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#my-container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { width: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;500px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>Avoid hard-coding <code>width</code> when possible. It&#39;s safer to specify dimensions using your site&#39;s CSS.</p></div><br><h3 id="omitinlinestyles" tabindex="-1">omitInlineStyles <a class="header-anchor" href="#omitinlinestyles" aria-label="Permalink to &quot;omitInlineStyles&quot;">​</a></h3><p>[boolean]. Default: <code>false</code></p><p>If set to true, PDFObject will not include any inline styles when generating the <code>&lt;iframe&gt;</code> element.</p><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>If you choose to omit inline styles, be sure to specify the <code>&lt;iframe&gt;</code> dimensions in your site&#39;s CSS. Failure to set dimensions may cause the PDF to be invisible (height 0).</p></div><p><strong>Demo:</strong> <a href="/examples/omit-inline-styles.html" target="_blank">Omitting inline styles</a></p><br><h3 id="suppressconsole" tabindex="-1">suppressConsole <a class="header-anchor" href="#suppressconsole" aria-label="Permalink to &quot;suppressConsole&quot;">​</a></h3><p>[boolean]. Default: <code>false</code></p><p>By default, PDFObject displays error messages in the browser&#39;s JavaScript console, such as &quot;URL is not valid&quot; or &quot;This browser does not support embedded PDFs&quot;. Set <code>suppressConsole</code> to true to prevent PDFObject from displaying error messages.</p>`,102),l=[n];function p(h,o,d,r,k,c){return e(),i("div",null,l)}const u=s(t,[["render",p]]);export{g as __pageData,u as default};
